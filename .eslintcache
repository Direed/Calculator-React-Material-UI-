[{"D:\\ReactProject\\calculator\\src\\index.js":"1","D:\\ReactProject\\calculator\\src\\App.js":"2","D:\\ReactProject\\calculator\\src\\reportWebVitals.js":"3","D:\\ReactProject\\calculator\\src\\components\\Calculator.js":"4","D:\\ReactProject\\calculator\\src\\components\\Buttons.js":"5","D:\\ReactProject\\calculator\\src\\components\\EntryField.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":5671,"mtime":1618081074840,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":10783,"mtime":1618080566112,"results":"11","hashOfConfig":"8"},{"size":1357,"mtime":1615022371753,"results":"12","hashOfConfig":"8"},{"size":1145,"mtime":1618080417012,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"79vpg4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\ReactProject\\calculator\\src\\index.js",[],["28","29"],"D:\\ReactProject\\calculator\\src\\App.js",["30","31","32"],"D:\\ReactProject\\calculator\\src\\reportWebVitals.js",[],"D:\\ReactProject\\calculator\\src\\components\\Calculator.js",["33","34","35","36","37","38","39","40","41"],"import React from 'react';\r\nimport EntryField from \"./EntryField\";\r\nimport Buttons from \"./Buttons\";\r\nimport ReactDOM from 'react-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = {\r\n    box: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#FF8181\",\r\n    },\r\n    box_dark_theme: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#505050\",\r\n    },\r\n    story: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"300px\",\r\n    },\r\n    containerForField: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#FF8181\",\r\n    },\r\n    containerForField_dark_theme: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#505050\",\r\n    },\r\n    entryField: {\r\n        borderRadius: \"15%\",\r\n    }\r\n};\r\n\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeValueWithButton = this.changeValueWithButton.bind(this);\r\n        this.doingOperation = this.doingOperation.bind(this);\r\n        this.state = {\r\n            value: '',\r\n            number: 0,\r\n            firstValue: 0,\r\n            secondValue: 1,\r\n            lastOperation: '',\r\n            statusCalculator: 'sleep',\r\n            masButton: ['CE','x^2', '%', '/', 7,8,9,'*',4,5,6,'-',1,2,3,'+','+/-',0,'.','='],\r\n        }\r\n    }\r\n\r\n    doingOperation(e){\r\n        switch (e.currentTarget.value) {\r\n            case \"CE\":\r\n                this.setState({\r\n                    value: '',\r\n                    lastOperation: '',\r\n                })\r\n                break;\r\n            case \"x^2\":\r\n                this.setState((state) => {\r\n                    return {\r\n                        firstValue: Math.pow(state.value, 2),\r\n                    }});\r\n                this.setState((state) => {\r\n                    return {\r\n                        value: state.firstValue,\r\n                    }});\r\n                this.setState({\r\n                    lastOperation: '',\r\n                })\r\n                break;\r\n            case \"%\":\r\n                this.setState((state) => {\r\n                    return {\r\n                        firstValue: state.value/100,\r\n                    }\r\n                })\r\n                this.setState((state) => {\r\n                    return {\r\n                        value: state.firstValue,\r\n                    }\r\n                })\r\n                this.setState({\r\n                    lastOperation: '',\r\n                })\r\n                break;\r\n            case \"/\":\r\n                this.analiseOperation(this.state.lastOperation)\r\n                this.setState({\r\n                    lastOperation: e.currentTarget.value,\r\n                    statusCalculator: 'work',\r\n                })\r\n                break;\r\n            case \"*\":\r\n                this.analiseOperation(this.state.lastOperation)\r\n                this.setState({\r\n                    lastOperation: e.currentTarget.value,\r\n                    statusCalculator: 'work',\r\n                })\r\n                break;\r\n            case \"-\":\r\n                this.analiseOperation(this.state.lastOperation)\r\n                this.setState({\r\n                    lastOperation: e.currentTarget.value,\r\n                    statusCalculator: 'work',\r\n                })\r\n                break;\r\n            case \"+\":\r\n                this.analiseOperation(this.state.lastOperation)\r\n                this.setState({\r\n                    lastOperation: e.currentTarget.value,\r\n                    statusCalculator: 'work',\r\n                })\r\n                break;\r\n            case \"+/-\":\r\n\r\n                break;\r\n            case \".\":\r\n\r\n                break;\r\n            case \"=\":\r\n                if(this.state.lastOperation!=''){\r\n                    switch(this.state.lastOperation){\r\n                        case '/':\r\n                            this.setState((state) => {\r\n                                return {\r\n                                    firstValue: state.firstValue / state.value,\r\n                                }\r\n                            })\r\n                            this.setState((state) => {\r\n                                return {\r\n                                    value: state.firstValue,\r\n                                }\r\n                            })\r\n                            break;\r\n                        case '*':\r\n                            this.setState((state) => {\r\n                                return {\r\n                                    firstValue: state.firstValue * state.value,\r\n                                }\r\n                            })\r\n                            this.setState((state) => {\r\n                                return {\r\n                                    value: state.firstValue,\r\n                                }\r\n                            })\r\n                            break;\r\n                        case '-':\r\n                            this.setState((state) => {\r\n                                return {\r\n                                    firstValue: state.firstValue - state.value,\r\n                                }\r\n                            })\r\n                            this.setState((state) => {\r\n                                return {\r\n                                    value: state.firstValue,\r\n                                }\r\n                            })\r\n                            break;\r\n                        case '+':\r\n                            this.setState((state) => {\r\n                                return {\r\n                                    firstValue: Number(state.firstValue) + Number(state.value),\r\n                                }\r\n                            })\r\n                            this.setState((state) => {\r\n                                return {\r\n                                    value: state.firstValue,\r\n                                }\r\n                            })\r\n                            break;\r\n                    }\r\n                } else {\r\n                    this.setState((state) => {\r\n                        return {\r\n                            firstValue: state.value,\r\n                        }\r\n                    })\r\n                }\r\n                this.setState({\r\n                    lastOperation: '',\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    analiseOperation(lastOperation){\r\n        if(lastOperation!=''){\r\n            switch(lastOperation){\r\n                case '/':\r\n                    this.setState((state) => {\r\n                        return {\r\n                            firstValue: state.firstValue / state.value,\r\n                        }\r\n                    })\r\n                    this.setState((state) => {\r\n                        return {\r\n                            value: state.firstValue,\r\n                        }\r\n                    })\r\n                    break;\r\n                case '*':\r\n                    this.setState((state) => {\r\n                        return {\r\n                            firstValue: state.firstValue * state.value,\r\n                        }\r\n                    })\r\n                    this.setState((state) => {\r\n                        return {\r\n                            value: state.firstValue,\r\n                        }\r\n                    })\r\n                    break;\r\n                case '-':\r\n                    this.setState((state) => {\r\n                        return {\r\n                            firstValue: state.firstValue - state.value,\r\n                        }\r\n                    })\r\n                    this.setState((state) => {\r\n                        return {\r\n                            value: state.firstValue,\r\n                        }\r\n                    })\r\n                    break;\r\n                case '+':\r\n                    this.setState((state) => {\r\n                        return {\r\n                            firstValue: Number(state.firstValue) + Number(state.value),\r\n                        }\r\n                    })\r\n                    this.setState((state) => {\r\n                        return {\r\n                            value: state.firstValue,\r\n                        }\r\n                    })\r\n                    break;\r\n            }\r\n        } else {\r\n            this.setState((state) => {\r\n                return {\r\n                    firstValue: state.value,\r\n                }\r\n            })\r\n            this.setState({\r\n                value: '',\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    changeValueWithButton(e){\r\n        this.setState({number: e.currentTarget.value})\r\n        if(this.state.statusCalculator === 'sleep'){\r\n            this.setState((state) => {\r\n                return {\r\n                    value: state.value + state.number,\r\n                }});\r\n        } else {\r\n            this.setState({\r\n                value: '',\r\n                statusCalculator: 'sleep',\r\n            })\r\n            this.setState((state) => {\r\n                return {\r\n                    value: state.value + state.number,\r\n                }});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        const { classes } = this.props;\r\n        const masButton = this.state.masButton;\r\n        const values = this.state.value;\r\n        const boxClass = this.props.checkedSwitch ? classes.box_dark_theme : classes.box;\r\n        const containerForFieldClass = this.props.checkedSwitch ? classes.containerForField_dark_theme : classes.containerForField;\r\n        return(\r\n            <Box className={boxClass}>\r\n            <Box className={containerForFieldClass}>\r\n                <EntryField values = {values}></EntryField>\r\n                <Buttons values = {values} masButton = {masButton} changeValueWithButton={this.changeValueWithButton} doingOperation={this.doingOperation}></Buttons>\r\n            </Box>\r\n            <Box className={classes.story}>\r\n\r\n            </Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(Calculator);","D:\\ReactProject\\calculator\\src\\components\\Buttons.js",[],"D:\\ReactProject\\calculator\\src\\components\\EntryField.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":5,"column":10,"nodeType":"48","messageId":"49","endLine":5,"endColumn":20},{"ruleId":"46","severity":1,"message":"51","line":11,"column":8,"nodeType":"48","messageId":"49","endLine":11,"endColumn":14},{"ruleId":"46","severity":1,"message":"52","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":16},{"ruleId":"46","severity":1,"message":"53","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":17},{"ruleId":"46","severity":1,"message":"51","line":7,"column":8,"nodeType":"48","messageId":"49","endLine":7,"endColumn":14},{"ruleId":"46","severity":1,"message":"54","line":9,"column":8,"nodeType":"48","messageId":"49","endLine":9,"endColumn":17},{"ruleId":"55","severity":1,"message":"56","line":70,"column":9,"nodeType":"57","messageId":"58","endLine":202,"endColumn":10},{"ruleId":"59","severity":1,"message":"60","line":140,"column":44,"nodeType":"61","messageId":"62","endLine":140,"endColumn":46},{"ruleId":"55","severity":1,"message":"56","line":141,"column":21,"nodeType":"57","messageId":"58","endLine":190,"endColumn":22},{"ruleId":"59","severity":1,"message":"60","line":206,"column":25,"nodeType":"61","messageId":"62","endLine":206,"endColumn":27},{"ruleId":"55","severity":1,"message":"56","line":207,"column":13,"nodeType":"57","messageId":"58","endLine":256,"endColumn":14},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'Button' is defined but never used.","'ReactDOM' is defined but never used.","'Container' is defined but never used.","'TextField' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]